name: immich

services:
  immich-server:
    container_name: immich-server
    image: ghcr.io/immich-app/immich-server:latest
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    environment:
      DB_PASSWORD: ${IMMICH_DB_PASSWORD}
      DB_USERNAME: postgres
      DB_DATABASE_NAME: immich
    volumes:
      - ${VOLUME_DIR}/immich/library:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    # ports:
    #   - 2283:2283
    networks:
      - traefik
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false
    labels:
      # - autoheal=true
      - traefik.enable=true
      ## HTTP Routers
      - traefik.http.routers.immich-rtr.entrypoints=websecure
      - traefik.http.routers.immich-rtr.rule=Host(`immich.$FQDN`)
      - traefik.http.routers.immich-rtr.tls=true
      ## Middlewares
      - traefik.http.routers.immich-rtr.middlewares=chain-no-auth@file # No Authentication
      # - traefik.http.routers.immich-rtr.middlewares=chain-basic-auth@file # Basic Authentication
      # - traefik.http.routers.immich-rtr.middlewares=chain-oauth2-proxy@file # OAuth 2.0
      ## HTTP Services
      - traefik.http.routers.immich-rtr.service=immich-svc
      - traefik.http.services.immich-svc.loadbalancer.server.port=2283

  immich-machine-learning:
    container_name: immich-machine-learning
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:latest
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    networks:
      - traefik
    restart: always
    healthcheck:
      disable: false

  redis:
    container_name: immich-redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:ff21bc0f8194dc9c105b769aeabf9585fea6a8ed649c0781caeac5cb3c247884
    networks:
      - traefik
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    container_name: immich-db
    image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0@sha256:fa4f6e0971f454cd95fec5a9aaed2ed93d8f46725cc6bc61e0698e97dba96da1
    environment:
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
      # Uncomment the DB_STORAGE_TYPE: 'HDD' var if your database isn't stored on SSDs
      DB_STORAGE_TYPE: 'HDD'
    networks:
      - traefik
    volumes:
      - ${VOLUME_DIR}/immich/db:/var/lib/postgresql/data
    restart: always

volumes:
  model-cache:

networks:
  traefik:
    name: traefik
    external: true
    #run: docker network create traefik