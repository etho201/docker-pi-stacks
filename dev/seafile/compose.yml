name: seafile

services:
  db:
    image: ${SEAFILE_DB_IMAGE:-mariadb:10.11}
    container_name: seafile-db
    environment:
      - MYSQL_ROOT_PASSWORD=${INIT_SEAFILE_MYSQL_ROOT_PASSWORD:-}
      - MYSQL_LOG_CONSOLE=true
      - MARIADB_AUTO_UPGRADE=1
    volumes:
      - ${VOLUME_DIR}/seafile/db:/var/lib/mysql
    networks:
      - traefik
    healthcheck:
      test:
        [
          "CMD",
          "/usr/local/bin/healthcheck.sh",
          "--connect",
          "--mariadbupgrade",
          "--innodb_initialized",
        ]
      interval: 20s
      start_period: 30s
      timeout: 5s
      retries: 10

  memcached:
    image: ${SEAFILE_MEMCACHED_IMAGE:-memcached:1.6.29}
    container_name: seafile-memcached
    entrypoint: memcached -m 256
    networks:
      - traefik

  seafile:
    image: ${SEAFILE_IMAGE:-seafileltd/seafile-mc:12.0-latest}
    container_name: seafile
    # ports:
    #   - "80:80"
    volumes:
      - ${VOLUME_DIR}/seafile/data:/shared
    environment:
      - DB_HOST=${SEAFILE_MYSQL_DB_HOST:-db}
      - DB_PORT=${SEAFILE_MYSQL_DB_PORT:-3306}
      - DB_USER=${SEAFILE_MYSQL_DB_USER:-seafile}
      - DB_ROOT_PASSWD=${INIT_SEAFILE_MYSQL_ROOT_PASSWORD:-}
      - DB_PASSWORD=${SEAFILE_MYSQL_DB_PASSWORD:?Variable is not set or empty}
      - SEAFILE_MYSQL_DB_CCNET_DB_NAME=${SEAFILE_MYSQL_DB_CCNET_DB_NAME:-ccnet_db}
      - SEAFILE_MYSQL_DB_SEAFILE_DB_NAME=${SEAFILE_MYSQL_DB_SEAFILE_DB_NAME:-seafile_db}
      - SEAFILE_MYSQL_DB_SEAHUB_DB_NAME=${SEAFILE_MYSQL_DB_SEAHUB_DB_NAME:-seahub_db}
      - TIME_ZONE=${TZ:-Etc/UTC}
      - INIT_SEAFILE_ADMIN_EMAIL=${INIT_SEAFILE_ADMIN_EMAIL:-me@example.com}
      - INIT_SEAFILE_ADMIN_PASSWORD=${INIT_SEAFILE_ADMIN_PASSWORD:-asecret}
      - SEAFILE_SERVER_HOSTNAME=seafile.${FQDN}
      - SEAFILE_SERVER_PROTOCOL=https
      - SITE_ROOT=${SITE_ROOT:-/}
      - NON_ROOT=${NON_ROOT:-false}
      - JWT_PRIVATE_KEY=${SEAFILE_JWT_PRIVATE_KEY:?Variable is not set or empty}
      - SEAFILE_LOG_TO_STDOUT=${SEAFILE_LOG_TO_STDOUT:-false}
      - ENABLE_SEADOC=${ENABLE_SEADOC:-true}
      - SEADOC_SERVER_URL=https://seafile.${FQDN}/sdoc-server
    labels:
      # - autoheal=true
      - traefik.enable=true
      ## HTTP Routers
      - traefik.http.routers.seafile-rtr.entrypoints=websecure
      - traefik.http.routers.seafile-rtr.rule=Host(`seafile.$FQDN`)
      - traefik.http.routers.seafile-rtr.tls=true
      ## Middlewares
      - traefik.http.routers.seafile-rtr.middlewares=chain-no-auth@file # No Authentication
      # - traefik.http.routers.seafile-rtr.middlewares=chain-basic-auth@file # Basic Authentication
      # - traefik.http.routers.seafile-rtr.middlewares=chain-oauth2-proxy@file # OAuth 2.0
      ## HTTP Services
      - traefik.http.routers.seafile-rtr.service=seafile-svc
      - traefik.http.services.seafile-svc.loadbalancer.server.port=80
    depends_on:
      db:
        condition: service_healthy
      memcached:
        condition: service_started
    networks:
      - traefik

networks:
  traefik:
    name: traefik
    external: true
    #run: docker network create traefik