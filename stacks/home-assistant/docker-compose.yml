---
services:

########################################################################################
# Home Assistant
# https://www.home-assistant.io/installation/raspberrypi#docker-compose
########################################################################################

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    volumes:
      - ${CONFIG_DIR}/home-assistant:/config
      - ${VOLUME_DIR}/home-assistant:/media
      - /etc/localtime:/etc/localtime:ro
    # ports:
    #   - 8123:8123
    restart: always
    privileged: true
    network_mode: host
    # devices:
    #   - /dev/ttyUSB0:/dev/ttyUSB0

  zwavejs2mqtt:
    container_name: zwavejs2mqtt
    image: zwavejs/zwavejs2mqtt:latest
    restart: always
    tty: true
    stop_signal: SIGINT
    environment:
      - SESSION_SECRET=${ZWAVEJS2MQTT_SESSION_SECRET}
      - ZWAVEJS_EXTERNAL_CONFIG=/usr/src/app/store/.config-db
      - TZ=${TZ}
    networks:
      - traefik
    devices:
      # Do not use /dev/ttyUSBX serial devices, as those mappings can change over time.
      # Instead, use the /dev/serial/by-id/X serial device for your Z-Wave stick.
      - '/dev/serial/by-id/${ZWAVE_DEVICE_ID}:/dev/zwave'
    volumes:
      - ${CONFIG_DIR}/zwavejs2mqtt:/usr/src/app/store
    ports:
      - '3000:3000' # port for Z-Wave JS websocket server
      # - '8091:8091' # port for web interface
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.zwavejs2mqtt-rtr.entrypoints=websecure"
      - "traefik.http.routers.zwavejs2mqtt-rtr.rule=Host(`zwavejs2mqtt.$FQDN`)"
      - "traefik.http.routers.zwavejs2mqtt-rtr.tls=true"
      ## Middlewares
      # - "traefik.http.routers.zwavejs2mqtt-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.zwavejs2mqtt-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.zwavejs2mqtt-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.zwavejs2mqtt-rtr.service=zwavejs2mqtt-svc"
      - "traefik.http.services.zwavejs2mqtt-svc.loadbalancer.server.port=8091"

  ring-mqtt:
    container_name: ring-mqtt
    restart: always
    image: tsightler/ring-mqtt
    network_mode: host
    # networks:
      # - traefik
    # ports:
    #   - 8554:8554                      # Enable RTSP port for external media player access
    volumes:
      - ${VOLUME_DIR}/ring-mqtt:/data  # Mapping of local folder to provide persistant storage
    environment:                       
      - RINGTOKEN=${RINGTOKEN}         # Required for initial startup, see: https://github.com/tsightler/ring-mqtt/blob/main/docs/DOCKER.md#authentication
      - MQTTHOST=127.0.0.1             # Hostname or IP of MQTT Broker !! MUST UPDATE HOSTNAME IN config.json FILE AS WELL !!
      - MQTTPORT=1883                  # TCP port for MQTT Broker
      - MQTTUSER=${USERNAME}           # CHANGE ME -- Username for MQTT Broker (remove for anonymous)
      - MQTTPASSWORD=${MOSQUITTO_PASSWORD}     # CHANGE ME -- Password for MQTT Broker (remove for anonymous)
      - ENABLECAMERAS=false            # Enable camera support
      - SNAPSHOTMODE=disabled          # Snapshot options (see: https://github.com/tsightler/ring-mqtt#snapshot-options)
      # - LIVESTREAMUSER=stream_user     # CHANGE ME -- Highly recommended if RTSP server is exposed
      # - LIVESTREAMPASSWORD=stream_pass # CHANGE ME -- Highly recommended if RTSP server is exposed
    logging:                           #limit logs to 10m and 3 files
      options:
        max-size: 10m
        max-file: "3"

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - MOSQUITTO_USERNAME=${USERNAME}
      - MOSQUITTO_PASSWORD=${MOSQUITTO_PASSWORD}
    # ports:
      # - 1883:1883
      # - 8883:8883
    volumes:
      - ${VOLUME_DIR}/mosquitto/data:/mosquitto/data
      - ${VOLUME_DIR}/mosquitto/logs:/mosquitto/log
      - ${CONFIG_DIR}/mosquitto:/mosquitto/config
    restart: always
    # networks:
      # - traefik
    network_mode: host

  eufy-security-ws:
    container_name: eufy-security-ws
    restart: always
    image: bropat/eufy-security-ws
    # networks:
      # - traefik
    network_mode: host
    # ports:
      # - 3000:3000
    volumes:
      - ${VOLUME_DIR}/eufy-security-ws:/data  # Mapping of local folder to provide persistant storage
    environment:                       
      - USERNAME=${EUFY_USERNAME}
      - PASSWORD=${EUFY_PASSWORD}
      - TRUSTED_DEVICE_NAME=${EUFY_TRUSTED_DEVICE}
      - PORT=3001

  rtsp-simple-server:
    container_name: rtsp-simple-server
    restart: always
    image: aler9/rtsp-simple-server:latest
    # networks:
      # - traefik
    network_mode: host
    # ports:
      # - 8554:8554
      # - 1935:1935
    environment:                       
      - RTSP_PROTOCOLS=tcp

  govee2mqtt:
    image: ghcr.io/wez/govee2mqtt:latest
    container_name: govee2mqtt
    restart: unless-stopped
    environment:
      - GOVEE_EMAIL=${GOVEE_EMAIL}
      - GOVEE_PASSWORD=${GOVEE_PASSWORD}
      # Optional, but recommended
      - GOVEE_API_KEY=${GOVEE_API_KEY}

      - GOVEE_MQTT_HOST=127.0.0.1
      - GOVEE_MQTT_PORT=1883
      # Uncomment if your mqtt broker requires authentication
      - GOVEE_MQTT_USER=${USERNAME}
      - GOVEE_MQTT_PASSWORD=${MOSQUITTO_PASSWORD}

      # Specify the temperature scale to use, either C for Celsius
      # or F for Farenheit
      - GOVEE_TEMPERATURE_SCALE=F
      # Always use colorized output
      - RUST_LOG_STYLE=always

      # If you are asked to set the debug level, uncomment the next line
      # - RUST_LOG=govee=trace

      # Set the timezone for timestamps in the log
      - TZ=${TZ}
    # Host networking is required
    network_mode: host

  # zigbee2mqtt:
  #   container_name: zigbee2mqtt
  #   image: ghcr.io/koenkk/zigbee2mqtt
  #   restart: unless-stopped
  #   volumes:
  #       - ${VOLUME_DIR}/zigbee2mqtt:/app/data
  #       - /run/udev:/run/udev:ro
  #   networks:
  #     - traefik
  #   # ports:
  #       # Frontend port
  #       # - 8080:8080 GUI
  #   environment:
  #       - TZ=${TZ}
  #   devices:
  #       # Make sure this matched your adapter location
  #       - /dev/serial/by-id/${ZWAVE_DEVICE_ID}:/dev/ttyACM0
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.zigbee2mqtt-rtr.entrypoints=websecure"
  #     - "traefik.http.routers.zigbee2mqtt-rtr.rule=Host(`zigbee2mqtt.$FQDN`)"
  #     - "traefik.http.routers.zigbee2mqtt-rtr.tls=true"
  #     ## Middlewares
  #     # - "traefik.http.routers.zigbee2mqtt-rtr.middlewares=chain-no-auth@file" # No Authentication
  #     # - "traefik.http.routers.zigbee2mqtt-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
  #     - "traefik.http.routers.zigbee2mqtt-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
  #     ## HTTP Services
  #     - "traefik.http.routers.zigbee2mqtt-rtr.service=zigbee2mqtt-svc"
  #     - "traefik.http.services.zigbee2mqtt-svc.loadbalancer.server.port=8080"

  esphome:
    container_name: esphome
    image: esphome/esphome:latest
    restart: always
    environment:
      - TZ=${TZ}
    networks:
      - traefik
    volumes:
      - ${CONFIG_DIR}/esphome:/config
    # ports:
    #   - '6052:6052'
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.esphome-rtr.entrypoints=websecure"
      - "traefik.http.routers.esphome-rtr.rule=Host(`esphome.$FQDN`)"
      - "traefik.http.routers.esphome-rtr.tls=true"
      ## Middlewares
      # - "traefik.http.routers.esphome-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.esphome-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.esphome-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.esphome-rtr.service=esphome-svc"
      - "traefik.http.services.esphome-svc.loadbalancer.server.port=6052"

  matter-server:
    image: ghcr.io/home-assistant-libs/python-matter-server:stable
    container_name: matter-server
    restart: unless-stopped
    # Required for mDNS to work correctly
    network_mode: host
    security_opt:
      # Needed for Bluetooth via dbus
      - apparmor:unconfined
    volumes:
      # Create an .env file that sets the USERDIR environment variable.
      - ${VOLUME_DIR}/matter-server:/data/
      # Required for Bluetooth via D-Bus
      - /run/dbus:/run/dbus:ro
    # If you adjust command line, make sure to pass the default CMD arguments too:
    #command: --storage-path /data --paa-root-cert-dir /data/credentials --bluetooth-adapter 0

networks:
  traefik:
    name: traefik
    external: true
    #run: docker network create traefik
